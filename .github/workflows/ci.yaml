name: Rust CI

on:
  push:
    branches: [ 3-add-a-ci-pipeline-to-test-the-rust-build ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Test sur diff√©rentes versions de Rust
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            rust: nightly
            experimental: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install system dependencies
      run: |
        if [[ "$(uname)" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler libprotobuf-dev
        elif [[ "$(uname)" == "Darwin" ]]; then
          brew update
          brew install protobuf
        fi

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.rust }}-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.rust }}-target-

    - name: Check formatting
      if: matrix.rust == 'stable' && matrix.os == 'ubuntu-latest'
      run: cargo fmt --all -- --check

    - name: Run clippy
      if: matrix.rust == 'stable'
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --verbose --all-features
      continue-on-error: ${{ matrix.experimental || false }}

  latest_deps:
    name: Test Latest Dependencies
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      CARGO_RESOLVER_INCOMPATIBLE_RUST_VERSIONS: allow
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install system dependencies
      run: |
        if [[ "$(uname)" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler libprotobuf-dev
        elif [[ "$(uname)" == "Darwin" ]]; then
          brew update
          brew install protobuf
        fi

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable

    - name: Update dependencies
      run: cargo update --verbose

    - name: Build with latest deps
      run: cargo build --verbose --all-features


